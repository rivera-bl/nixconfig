#!/bin/python
import argparse
import boto3

# Function to convert bytes to a human-readable format
def convert_bytes_to_human_readable(size_in_bytes):
    size_in_bytes = float(size_in_bytes)
    kilo_bytes = size_in_bytes / 1024
    mega_bytes = kilo_bytes / 1024
    giga_bytes = mega_bytes / 1024

    if giga_bytes >= 1:
        return f"{giga_bytes:.2f} GB"
    elif mega_bytes >= 1:
        return f"{mega_bytes:.2f} MB"
    elif kilo_bytes >= 1:
        return f"{kilo_bytes:.2f} KB"
    else:
        return f"{size_in_bytes:.2f} Bytes"

def main():
    parser = argparse.ArgumentParser(description='List objects in an S3 bucket and display total size for a single prefix.')
    parser.add_argument('bucket_name', type=str, help='Name of the S3 bucket')
    parser.add_argument('prefix', type=str, help='Prefix for filtering objects')
    parser.add_argument('--total-size', action='store_true', help='Calculate total size for a single prefix')

    args = parser.parse_args()

    s3 = boto3.client('s3')
    response = s3.list_objects_v2(Bucket=args.bucket_name, Prefix=args.prefix)

    if args.total_size:
        total_size = sum(obj['Size'] for obj in response.get('Contents', []))
        total_size_human_readable = convert_bytes_to_human_readable(total_size)
        print(f"Total Size for Prefix '{args.prefix}': {total_size_human_readable}")
    else:
        # Group objects by the subfolder
        grouped_objects = {}
        for obj in response.get('Contents', []):
            key_parts = obj['Key'].split('/')
            
            if len(key_parts) > 2:  # Check if there is a subfolder
                subfolder_key = '/'.join(key_parts[1:-1])
                
                if subfolder_key not in grouped_objects:
                    grouped_objects[subfolder_key] = {'Folder': subfolder_key, 'TotalSize': 0}
                
                grouped_objects[subfolder_key]['TotalSize'] += obj['Size']

        # Print the results
        for group in grouped_objects.values():
            total_size_human_readable = convert_bytes_to_human_readable(group['TotalSize'])
            print(f"Folder: {group['Folder']}, Total Size: {total_size_human_readable}")

if __name__ == "__main__":
    main()

